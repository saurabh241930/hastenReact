{"ast":null,"code":"var _jsxFileName = \"/home/sp/Desktop/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '399831739132-f5qsn3oqtvm9jarljkp9i40t5v2iis4k.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); // this.onAuthChange(this.auth.isSignedIn.get())\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  } //    onAuthChange = (isSignedIn) => {\n  //        if (isSignedIn){\n  //            this.props.signIn()\n  //        }else{\n  //            this.props.signOut()\n  //        }\n  //    }\n  //  \n  //    onAuthClick = () => {\n  //      if (this.state.isSignedIn){\n  //          this.auth.signOut();\n  //      }else{\n  //          this.auth.signIn()\n  //      }\n  //    }\n  // onAuthChange = (isSignedIn) => {\n  //     this.setState({isSignedIn:this.auth.isSignedIn.get()})\n  // }\n\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this), \"Sign out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), \"Sign in with google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n//     return {isSignedIn:state.auth.isSignedIn}\n// }\n\n\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/sp/Desktop/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","onAuthChange","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,YAA7B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAF6B;;AAAA,SA+CzCC,aA/CyC,GA+CzB,MAAM;AAClB,WAAKC,IAAL,CAAUP,MAAV;AACH,KAjDwC;;AAAA,SAmDzCQ,cAnDyC,GAmDxB,MAAM;AACnB,WAAKD,IAAL,CAAUN,OAAV;AACH,KArDwC;AAAA;;AAItCQ,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAgC,MAAI;AAEnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAC,0EADW;AAEpBC,QAAAA,KAAK,EAAC;AAFc,OAAxB,EAGGC,IAHH,CAGQ,MAAK;AACT,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAACf,UAAAA,UAAU,EAAC,KAAKE,IAAL,CAAUF,UAAV,CAAqBgB,GAArB;AAAZ,SAAd,EAFS,CAGT;;AACA,aAAKd,IAAL,CAAUF,UAAV,CAAqBiB,MAArB,CAA4B,KAAKC,YAAjC;AAEH,OATD;AAWA,KAbD;AAcH,GAnBqC,CAsBzC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;;;AAeGC,EAAAA,gBAAgB,GAAE;AACd,QAAI,KAAKpB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAmC;AAC/B,aAAO,IAAP;AACH,KAFD,MAEM,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAAyB;AAC3B,0BACI;AAAQ,QAAA,OAAO,EAAE,KAAKG,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPK,MAOD;AACD,0BACC;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAMH;AACJ;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AApFqC,C,CAwFzC;AACA;AACA;;;AAMA,eAAezB,OAAO,CAClB,IADkB,EAElB;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAFkB,CAAP,CAIbC,UAJa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {signIn,signOut} from '../actions'\n\nclass GoogleAuth extends React.Component {\n\n    state = {isSignedIn:null}\n\n   componentDidMount(){\n       window.gapi.load('client:auth2',()=>{\n\n        window.gapi.client.init({\n            clientId:'399831739132-f5qsn3oqtvm9jarljkp9i40t5v2iis4k.apps.googleusercontent.com',\n            scope:'email'\n        }).then(() =>{\n            this.auth = window.gapi.auth2.getAuthInstance();\n            this.setState({isSignedIn:this.auth.isSignedIn.get()})\n            // this.onAuthChange(this.auth.isSignedIn.get())\n            this.auth.isSignedIn.listen(this.onAuthChange)\n\n        })\n\n       });\n   }\n\n\n//    onAuthChange = (isSignedIn) => {\n//        if (isSignedIn){\n//            this.props.signIn()\n//        }else{\n//            this.props.signOut()\n//        }\n//    }\n\n//  \n\n//    onAuthClick = () => {\n\n//      if (this.state.isSignedIn){\n//          this.auth.signOut();\n//      }else{\n//          this.auth.signIn()\n//      }\n\n//    }\n\n\n// onAuthChange = (isSignedIn) => {\n//     this.setState({isSignedIn:this.auth.isSignedIn.get()})\n// }\n\nonSignInClick = () => {\n    this.auth.signIn();\n}\n\nonSignOutClick = () => {\n    this.auth.signOut();\n}\n\n\n\n\n \n\n   renderAuthButton(){\n       if (this.state.isSignedIn === null){\n           return null;\n       }else if(this.state.isSignedIn){\n           return (\n               <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                   <i className=\"google icon\"/>\n                   Sign out\n               </button>\n           )\n       }else{\n           return (\n            <button onClick={this.onSignInClick}  className=\"ui red google button\">\n            <i className=\"google icon\"/>\n            Sign in with google\n        </button>\n           )\n       }\n   }\n\n   render(){\n       return (\n           <div>{this.renderAuthButton()}</div>\n       )\n   }\n}\n\n\n// const mapStateToProps = (state) => {\n//     return {isSignedIn:state.auth.isSignedIn}\n// }\n\n\n\n\n\nexport default connect(\n    null,\n    {signIn,signOut}\n\n)(GoogleAuth);"]},"metadata":{},"sourceType":"module"}