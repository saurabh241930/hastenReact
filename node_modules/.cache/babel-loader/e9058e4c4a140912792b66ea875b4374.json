{"ast":null,"code":"var _jsxFileName = \"/home/sp/Desktop/hashtenDemo/client/src/components/AddDataForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createData } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddDataForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      placeholder,\n      meta\n    }) => {\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\",\n          placeholder: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      this.props.createData(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  reflectValue() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"ui dividing header\",\n        children: \"Client Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"four fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"iwo\",\n          component: this.renderInput,\n          placeholder: \"IWO No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"client\",\n          component: this.renderInput,\n          placeholder: \"client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"die\",\n          component: this.renderInput,\n          placeholder: \"Die No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"ui dividing header\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"in\",\n          component: this.renderInput,\n          placeholder: \"In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"out\",\n          component: this.renderInput,\n          placeholder: \"Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"ui dividing header\",\n        children: \"Billet INPUTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"size\",\n          component: this.renderInput,\n          placeholder: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"nos\",\n          component: this.renderInput,\n          placeholder: \"Nos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"weight\",\n          component: this.renderInput,\n          placeholder: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"alloy\",\n          component: this.renderInput,\n          placeholder: \"Alloy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"speed\",\n          component: this.renderInput,\n          placeholder: \"Production speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button secondary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.iwo) {\n    errors.iwo = 'You must enter IWO no.';\n  }\n\n  if (!formValues.client) {\n    errors.client = 'You must enter client';\n  }\n\n  if (!formValues.die) {\n    errors.die = 'You must enter die no.';\n  }\n\n  if (!formValues.in) {\n    errors.in = 'You must enter in time';\n  }\n\n  if (!formValues.out) {\n    errors.out = 'You must enter out time';\n  }\n\n  if (!formValues.size) {\n    errors.size = 'You must enter size';\n  }\n\n  if (!formValues.nos) {\n    errors.nos = 'You must enter nos.';\n  }\n\n  if (!formValues.weight) {\n    errors.weight = 'You must enter  weight';\n  }\n\n  if (!formValues.out) {\n    errors.alloy = 'You must enter out alloy';\n  }\n\n  if (!formValues.size) {\n    errors.speed = 'You must enter speed';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'addDataForm',\n  validate\n})(AddDataForm);\nexport default connect(null, {\n  createData\n})(formWrapped);","map":{"version":3,"sources":["/home/sp/Desktop/hashtenDemo/client/src/components/AddDataForm.js"],"names":["React","Field","reduxForm","connect","createData","AddDataForm","Component","renderInput","input","placeholder","meta","className","error","touched","renderError","onSubmit","formValues","props","reflectValue","render","handleSubmit","validate","errors","iwo","client","die","in","out","size","nos","weight","alloy","speed","formWrapped","form"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Field,reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createData} from '../actions';\r\n\r\nclass AddDataForm extends React.Component {\r\n\r\n    renderError({error,touched}){\r\n        if (touched && error){\r\n            return(\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    reflectValue(){\r\n\r\n    }\r\n\r\n    renderInput = ({input,placeholder,meta}) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error':''}`\r\n        return (\r\n            <div className={className}>\r\n                <input {...input} autoComplete=\"off\" placeholder={placeholder}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.createData(formValues)\r\n    }\r\n\r\n    render(){ \r\n        \r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n                <h4 className=\"ui dividing header\">Client Details</h4>\r\n                <div className=\"four fields\">\r\n                    <Field name=\"iwo\" component={this.renderInput} placeholder=\"IWO No.\"/>\r\n                    <Field name=\"client\" component={this.renderInput} placeholder=\"client\" />\r\n                    <Field name=\"die\" component={this.renderInput} placeholder=\"Die No.\" />\r\n                    \r\n                </div>\r\n\r\n\r\n                <h4 className=\"ui dividing header\">Time</h4>\r\n                <div className=\"two fields\">\r\n                    <Field name=\"in\" component={this.renderInput} placeholder=\"In\"/>\r\n                    <Field name=\"out\" component={this.renderInput} placeholder=\"Out\"/>\r\n                </div>\r\n\r\n                <h4 className=\"ui dividing header\">Billet INPUTS</h4>\r\n                <div className=\"three fields\">\r\n                    <Field name=\"size\" component={this.renderInput} placeholder=\"Size\"/>\r\n                    <Field name=\"nos\" component={this.renderInput} placeholder=\"Nos.\"/>\r\n                    <Field name=\"weight\" component={this.renderInput} placeholder=\"Weight\"/>\r\n                    <Field name=\"alloy\" component={this.renderInput} placeholder=\"Alloy\" />\r\n                    <Field name=\"speed\" component={this.renderInput} placeholder=\"Production speed\"/>\r\n\r\n                </div>\r\n\r\n\r\n                <button className=\"ui button secondary\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n    }\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {}\r\n    if (!formValues.iwo){\r\n        errors.iwo = 'You must enter IWO no.'\r\n    }\r\n    if (!formValues.client){\r\n        errors.client = 'You must enter client'\r\n    }\r\n    if (!formValues.die){\r\n        errors.die = 'You must enter die no.'\r\n    }\r\n    if (!formValues.in){\r\n        errors.in = 'You must enter in time'\r\n    }\r\n    if (!formValues.out){\r\n        errors.out = 'You must enter out time'\r\n    }\r\n    if (!formValues.size){\r\n        errors.size = 'You must enter size'\r\n    }\r\n    if (!formValues.nos){\r\n        errors.nos = 'You must enter nos.'\r\n    }\r\n    if (!formValues.weight){\r\n        errors.weight = 'You must enter  weight'\r\n    }\r\n    if (!formValues.out){\r\n        errors.alloy = 'You must enter out alloy'\r\n    }\r\n    if (!formValues.size){\r\n        errors.speed = 'You must enter speed'\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst formWrapped =  reduxForm({\r\n    form:'addDataForm',\r\n    validate\r\n})(AddDataForm);\r\n\r\n\r\nexport default connect(null,{createData})(formWrapped);"]},"metadata":{},"sourceType":"module"}